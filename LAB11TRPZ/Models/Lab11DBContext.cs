// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace LAB11TRPZ.Models;

public partial class Lab11DBContext : DbContext
{
    public Lab11DBContext()
    {
    }

    public Lab11DBContext(DbContextOptions<Lab11DBContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Printer> Printers { get; set; }

    public virtual DbSet<PrinterModel> PrinterModels { get; set; }

    public virtual DbSet<PrinterType> PrinterTypes { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
        => optionsBuilder.UseSqlServer("Data Source=ALEX;Initial Catalog=Lab11DB;Integrated Security=True;Pooling=False;TrustServerCertificate=True;");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Printer>(entity =>
        {
            entity.HasKey(e => e.PrinterId).HasName("PK__Printer__D452AB2124033087");

            entity.ToTable("Printer");

            entity.Property(e => e.PrinterId).HasColumnName("PrinterID");
            entity.Property(e => e.PrinterModelId).HasColumnName("PrinterModelID");
            entity.Property(e => e.PrinterTypeId).HasColumnName("PrinterTypeID");
            entity.Property(e => e.ReleaseDate).HasColumnType("date");
            entity.Property(e => e.SerialNumber)
                .IsRequired()
                .HasMaxLength(50);

            entity.HasOne(d => d.PrinterModel).WithMany(p => p.Printers)
                .HasForeignKey(d => d.PrinterModelId)
                .HasConstraintName("FK__Printer__Printer__3D5E1FD2");

            entity.HasOne(d => d.PrinterType).WithMany(p => p.Printers)
                .HasForeignKey(d => d.PrinterTypeId)
                .HasConstraintName("FK__Printer__Printer__3E52440B");
        });

        modelBuilder.Entity<PrinterModel>(entity =>
        {
            entity.HasKey(e => e.PrinterModelId).HasName("PK__PrinterM__1616C3492A70336C");

            entity.ToTable("PrinterModel");

            entity.Property(e => e.PrinterModelId).HasColumnName("PrinterModelID");
            entity.Property(e => e.Manufacturer).HasMaxLength(50);
            entity.Property(e => e.ModelName)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<PrinterType>(entity =>
        {
            entity.HasKey(e => e.PrinterTypeId).HasName("PK__PrinterT__60494BE60892E77A");

            entity.ToTable("PrinterType");

            entity.Property(e => e.PrinterTypeId).HasColumnName("PrinterTypeID");
            entity.Property(e => e.Description).HasMaxLength(255);
            entity.Property(e => e.TypeName)
                .IsRequired()
                .HasMaxLength(50);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}